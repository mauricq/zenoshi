# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    dateTimeFormat: 'Y-m-d H:i:s'
    sizeCodRef: 6  # This number must be even (Multiples of 2)
    pathTempFiles: '_img\'
    pathEnvironmentFiles: '%kernel.project_dir%\public\'
    imageSalt: '68BF19E49229CA8144D8182FC6448'
    fileModeCreation: '0700'
    filesTypeAllowed: ['IMAGE','JPEG','PNG']

imports:
    - { resource: 'config.yml' }

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        bind:
            $dateTimeFormat: '%dateTimeFormat%'
            $checkDuplicated: '%checkDuplicated%'
            $sizeCodRef: '%sizeCodRef%'
            $pathTempFiles: '%pathTempFiles%'
            $pathEnvironmentFiles: '%pathEnvironmentFiles%'
            $saltImage: '%imageSalt%'
            $fileModeCreation: '%fileModeCreation%'
            $filesTypeAllowed: '%filesTypeAllowed%'


    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Security\JWTTokenAuthenticator: ~

    JMS\Serializer\SerializerBuilder:
        class: JMS\Serializer\SerializerBuilder
        factory: ['JMS\Serializer\SerializerBuilder', create]

    App\Entity\EntityProvider: ~

    App\Service\Share\IServiceProviderInterface: ~

    api_bundle.security.auth_user_provider:
        class: App\Security\AuthUserProvider
        factory: ["@doctrine", getRepository]
        arguments:
              - App\Entity\User
        public: true

